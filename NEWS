                   User-Visible pam-afs-session Changes

pam-afs-session 1.0 (2006-12-06)

    Add --with-afs-headers to configure so that the user doesn't have to
    know the right syntax for setting CPPFLAGS.

    When using gcc, link with -fPIC as well as compiling with it per the
    gcc documentation.

    Add additional configuration information for Solaris.

    Link explicitly against the Kerberos libraries by default when linking
    with libkafs, only relying on transitive shared library dependencies
    when --enable-reduced-depends is passed to configure.  This should not
    be necessary on any of the currently supported platforms but may make
    porting easier to systems with deficient shared library support.

    Support building on Mac OS X.  The resulting module isn't tested and
    may not work.  Thanks, Sebastian Hagedorn.

pam-afs-session 0.3 (2006-11-28)

    Compile in a default path to aklog if configure can find it on the
    path or if told the path with the --with-aklog option.  In this case,
    program is now optional in the PAM configuration.

    Use __func__ instead of __FUNCTION__ and provide a fallback for older
    versions of gcc and for systems that support neither.  Should fix
    compilation issues with Sun's C compiler.

    On platforms where we know the appropriate compiler flags, try to
    build the module so that symbols are resolved within the module in
    preference to any externally available symbols.  Also add the
    hopefully correct compiler flags for Sun's C compiler.

pam-afs-session 0.2 (2006-11-17)

    Add a man page.

    Add a fallback implementation of the AFS system call for platforms
    that use syscall, and add the signal handler protection for the
    k_hasafs probe for those platforms.  The PAM module should now build
    on Solaris without requiring libkafs or libkopenafs.

    Add an always_aklog option saying to always run aklog even if the user
    doesn't appear to have a ticket cache.

    Add an aklog_homedir option saying to pass -p <homedir> to aklog.
    This will obtain tokens in whatever AFS cells are required to access
    the user's home directory and can be used when something more complex
    than obtaining tokens in the local default cell is needed.

    Reopen stdout and stderr to /dev/null before running aklog so that any
    error messages from aklog don't confuse the calling program.

    Log a message if aklog fails, but return PAM_SUCCESS from the module
    whether aklog succeeded or not.  If we fail, the user may be kicked
    out of their session even though AFS tokens may not be necessary and
    only obtained as a convenience.  Obtaining a PAG is still required.

pam-afs-session 0.1 (2006-11-10)

    Initial beta release.

    Supports libkafs and libkopenafs in theory, but only the internal
    syscall layer has been tested.  No man page yet, and the program to
    run to obtain tokens must be specified in the PAM options.
