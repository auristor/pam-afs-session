=head1 NAME

pam_afs_session - AFS PAG and token PAM module

=head1 SYNOPSIS

  auth          optional        pam_afs_session.so
  session       required        pam_afs_session.so

=head1 DESCRIPTION

The AFS session service module for PAM, typically installed at
F</lib/security/pam_afs_session.so>, establishes new AFS sessions and
obtains AFS tokens when a new session is opened for a user.  It is a
shared object that is dynamically loaded by the PAM subsystem as
necessary, based on the system PAM configuration.  PAM is a system for
plugging in external authentication and session management modules so that
each application doesn't have to know the best way to check user
authentication or create a user session on that system.  For details on
how to configure PAM on your system, see the PAM man page, often pam(7).

This module provides pam_setcred, pam_open_session, and pam_close_session
implementations for AFS.  Because pam_setcred is part of the auth PAM
group, it also implements a dummy pam_authenticate that always succeeds
(otherwise, it can't provide a pam_setcred).

Make sure that this module is NEVER listed as C<sufficient> or as the only
C<required> module in the auth group.  Doing so will potentially allow
users to log on without any password.  There unfortunately isn't a way to
work around this and still provide pam_setcred given the structure of PAM.

Here are the actions of this module:

=over 4

=item pam_open_session

When a new session is opened, this module will first check to see if AFS
is running on the system.  If not, it will log a message and exit
successfully.  If AFS is running, it will place the user's session in a
new PAG (Process Authentication Group, often implemented as supplemental
groups, which limits user tokens to only processes in that PAG) and then
will attempt to run an external B<aklog> program to obtain tokens as
configured below.  If PAG creation fails, the module will fail; if
B<aklog> fails, the module will log a warning but still return success.

The module will only attempt to obtain tokens via B<aklog> if the
environment variable KRB5CCNAME is set in the environment, unless
otherwise configured (see the always_aklog option).  It will always create
a new PAG, however.

=item pam_close_session

If and only if pam_open_session successfully obtained AFS tokens and AFS
is still running on the system, pam_close_session will delete the tokens
in the current PAG (equivalent to running B<unlog>).

=item pam_setcred

When pam_setcred is called with the PAM_ESTABLISH_CRED flag, it will do
the same as if pam_open_session was called.  When pam_setcred is called
with the PAM_DELETE_CRED flag, it will do the same as if pam_close_session
was called.  When called with the PAM_REINITIALIZE_CRED flag or the
PAM_REFRESH_CRED flag, it won't create a new PAG but instead will only run
B<aklog> to get new tokens (still skipping this unless KRB5CCNAME is set
in the environment or always_aklog is set).

=back

This module is primarily intended for use with a Kerberos v5
authentication module.  It does not itself do any user authentication; it
cannot, for instance, be used to authenticate users to a B<kaserver>.
While it is intended for use with an B<aklog> that uses Kerberos v5 ticket
caches to obtain tokens, it can be used with any B<aklog> implementation
(always_aklog may have to be set if no Kerberos v5 ticket cache will be
present).

This module performs no authorization checks and does not hook into
password changes; it only implements the session functions and
pam_setcred.

=head1 CONFIGURATION

The AFS session PAM module supports the following configuration options,
which may be set in the PAM configuration as arguments listed after
C<pam_afs_session.so> or in the system F<krb5.conf>.

Some of them take arguments, in which case the argument will be given
after C<=>.  The rest are boolean options.  To set a boolean option in the
PAM configuration, just give the name of the option in the arguments.  To
set an option that takes an argument, follow the option name with an equal
sign (C<=>) and the value, with no separating whitespace.  Whitespace in
option arguments is not supported in the PAM configuration.

To set an option for the PAM module in the system F<krb5.conf> file, put
that option in the [appdefaults] section.  The AFS session PAM module will
look for options either at the top level of the [appdefaults] section or
in a subsection named C<pam-afs-session> (currently, realm-specific
configuration is not checked).  For example, the following fragment of a
F<krb5.conf> file would set I<aklog_homedir> to true and I<minimum_uid> to
100.

    [appdefaults]
        aklog_homedir = true
        pam-afs-session = {
            minimum_uid = 100
        }

There is no difference to the PAM module whether options are specified at
the top level or in a C<pam-afs-session> section; the C<pam-afs-session>
section is supported in case there are options that should be set for the
PAM module but not for other applications.  For more information on the
syntax of F<krb5.conf>, see krb5.conf(5).

If the same option is set in F<krb5.conf> and in the PAM configuration,
the latter takes precedent.  Note, however, that due to the configuration
syntax, there's no way to turn off a boolean option in the PAM
configuration that was turned on in F<krb5.conf>.

=over 4

=item aklog_homedir

Normally, B<aklog> is called without any options.  If this option is
given, B<aklog> will be called with B<-p> I<home-directory> where
I<home-directory> is the home directory of the local user for which the
session is being opened or refreshed (retrieved via getpwnam()).  This
generally will tell B<aklog> to check that path, find all AFS cells
involved in access to that path, and attempt to obtain tokens for each
one.  Note that this means that if the user's home directory is not in
AFS, no tokens will be obtained.

=item always_aklog

Normally, B<aklog> is only run if KRB5CCNAME is set in the PAM
environment.  If this option is set, B<aklog> will always be run.  This
can be used if your environment doesn't correctly set KRB5CCNAME in the
environment for some reason, or if your B<aklog> doesn't rely on a
Kerberos ticket cache to obtain tokens (or can find the cache on its own
via some other means).

=item debug

If this option is set, additional trace information will be logged to
syslog with priority LOG_DEBUG.

=item ignore_root

If this option is set, the AFS session PAM module won't take any action
(and will exit successfully) if the account for which the session is being
established is named C<root>.

=item kdestroy

If this option is set and the AFS session PAM module was built with
Kerberos support, the user's ticket cache will be destroyed after B<aklog>
is run successfully.  If B<aklog> does not complete successfully, the
ticket cache will be left intact.  Please note that this is not properly a
security feature, since the ticket cache will still be written to disk
between the time the Kerberos PAM module authenticates the user and the
time the AFS session PAM module is run.  It can, however, be used to
reduce the window during which Kerberos ticket caches are lying about if
the only use one has for ticket caches is to obtain AFS tokens.

=item minimum_uid=I<uid>

If this option is set, the AFS session PAM module won't take any action
(and will exit successfully) if the account for which the session is being
established has a UID lower than I<uid>.

=item nopag

If this option is set, no PAG will be created.  Be careful when using this
option, since it means that the user will inherit a PAG from the process
managing the login.  If B<sshd>, for instance, is started in a PAG, every
user who logs in via ssh will be put in the same PAG and will share tokens
if this option is used.

=item program=I<path>

The path to the B<aklog> program to run.  If this option is not set, a
default path to B<aklog> determined at compile time (the first B<aklog>
found on the compiler's path by default) is used.  If no B<aklog> could be
found at compile time, this option must be set.

=item retain_after_close

If this option is set, pam_close_session will do nothing (successfully)
rather than deleting tokens.  This will allow programs started in the
user's PAG that are still running when the log out to continue to use the
user's tokens until they expire.  Normally, the AFS kernel module will
automatically clean up tokens once every process in that PAG has
terminated.

=back

=head1 ENVIRONMENT

=over 4

=item KRB5CCNAME

This module looks for KRB5CCNAME in the PAM environment and by default
does not run B<aklog> if it is not set.

=back

The entire PAM environment is passed to B<aklog> as its environment
(rather than the environment of the process running the PAM functions).

=head1 WARNINGS

As mentioned above, this module implements a dummy pam_authenticate
function so that it can provide a pam_setcred function.  Never list this
module as C<sufficient> or as the only C<required> module or you may allow
users to log on without a password.

To detect whether AFS is running on the system, the AFS session PAM module
teporarily sets a SIGSYS handler before attempting an AFS system call.
That handler may also modify a static variable.  Neither of these should
ideally be done in a PAM module, but there is no other good way of
checking for the non-existence of a system call that doesn't crash the
application on some operating systems.  The PAM module will attempt to
restore the previous SIGSYS handler, if any, after the test is done, and
the static variable is used in such a way that running it from multiple
threads shouldn't be an issue, but be aware that the PAM module is doing
this behind the back of the application and may interfere with unusual
SIGSYS handlers or similar application actions.

=head1 SEE ALSO

aklog(1), pam(7), syslog(3), unlog(1)

=cut
